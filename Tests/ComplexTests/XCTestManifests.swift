#if !canImport(ObjectiveC)
import XCTest

extension ComplexArithmeticTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComplexArithmeticTests = [
        ("testAddition", testAddition),
        ("testAdditionIgnoringOverflow", testAdditionIgnoringOverflow),
        ("testAdditionWithZero", testAdditionWithZero),
        ("testComponentwiseDivision", testComponentwiseDivision),
        ("testComponentwiseMultiplication", testComponentwiseMultiplication),
        ("testDivision", testDivision),
        ("testMultiplication", testMultiplication),
        ("testMultiplicationIgnoringOverflow", testMultiplicationIgnoringOverflow),
        ("testMultiplicationWithZero", testMultiplicationWithZero),
        ("testSubtraction", testSubtraction),
        ("testSubtractionIgnoringOverflow", testSubtractionIgnoringOverflow),
        ("testSubtractionWithZero", testSubtractionWithZero),
    ]
}

extension ComplexOverflowingArithmeticTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComplexOverflowingArithmeticTests = [
        ("testAddExtendedScalars", testAddExtendedScalars),
        ("testComponentwiseOverflowingDivision", testComponentwiseOverflowingDivision),
        ("testComponentwiseOverflowingMultiplication", testComponentwiseOverflowingMultiplication),
        ("testDivideFullWidth", testDivideFullWidth),
        ("testDivideReportingOverflow", testDivideReportingOverflow),
        ("testIsLessThan", testIsLessThan),
        ("testIsLessThanOrEqual", testIsLessThanOrEqual),
        ("testIsPowerOfTwo", testIsPowerOfTwo),
        ("testLeadingZeroBitCount", testLeadingZeroBitCount),
        ("testLeftShiftExtendedScalars", testLeftShiftExtendedScalars),
        ("testMultiplyFullWidth", testMultiplyFullWidth),
        ("testMultiplyReportingOverflow", testMultiplyReportingOverflow),
        ("testOverflowingAddition", testOverflowingAddition),
        ("testOverflowingSubtraction", testOverflowingSubtraction),
        ("testRightShiftExtendedScalars", testRightShiftExtendedScalars),
        ("testSignExtension", testSignExtension),
        ("testSlowpathDivide", testSlowpathDivide),
        ("testSlowpathMultiply", testSlowpathMultiply),
        ("testSubtractExtendedScalars", testSubtractExtendedScalars),
        ("testTruncateExtendedScalars", testTruncateExtendedScalars),
        ("testTwosComplement", testTwosComplement),
    ]
}

extension ComplexTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ComplexTests = [
        ("testAdditiveArithmeticProtocolRequirements", testAdditiveArithmeticProtocolRequirements),
        ("testConjugateMethods", testConjugateMethods),
        ("testDescriptionMethods", testDescriptionMethods),
        ("testHashing", testHashing),
        ("testInitialization", testInitialization),
        ("testMultiplyByI", testMultiplyByI),
        ("testMultiplyByOne", testMultiplyByOne),
        ("testNegationMethods", testNegationMethods),
        ("testPlusPrefixOperator", testPlusPrefixOperator),
        ("testPolarComponents", testPolarComponents),
        ("testRandomFactoryMethods", testRandomFactoryMethods),
        ("testRounding", testRounding),
    ]
}

extension FunctionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FunctionsTests = [
        ("test_abs", test_abs),
        ("test_acos", test_acos),
        ("test_asin", test_asin),
        ("test_atan", test_atan),
        ("test_clamp", test_clamp),
        ("test_cos", test_cos),
        ("test_cosh", test_cosh),
        ("test_csqrt", test_csqrt),
        ("test_exp", test_exp),
        ("test_log", test_log),
        ("test_log10", test_log10),
        ("test_log2", test_log2),
        ("test_max", test_max),
        ("test_min", test_min),
        ("test_sin", test_sin),
        ("test_sinh", test_sinh),
        ("test_sqrt", test_sqrt),
        ("test_tan", test_tan),
        ("test_tanh", test_tanh),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ComplexArithmeticTests.__allTests__ComplexArithmeticTests),
        testCase(ComplexOverflowingArithmeticTests.__allTests__ComplexOverflowingArithmeticTests),
        testCase(ComplexTests.__allTests__ComplexTests),
        testCase(FunctionsTests.__allTests__FunctionsTests),
    ]
}
#endif // #if !canImport(ObjectiveC)
